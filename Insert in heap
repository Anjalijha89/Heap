static class heap
    {
        ArrayList<Integer> arr = new ArrayList<>();
        public void add(int data)
        {
            //add at last index
            arr.add(data);
            int x = arr.size()-1;
            int par = (x-1)/2;
            while(arr.get(x) < arr.get(par))
            {
                int temp = arr.get(x);
                arr.set(x,arr.get(par));
                arr.set(par,temp);
                x = par;
                par = (x-1)/2;
            }
        }


        //peek operation on heap
        public int peek()
        {
            return arr.get(0);
        }


        //Heapify
        private void heapify(int i)
        {
            int left = 2*i+1;
            int right = 2*i+2;
            int minIdx = i;

            if(left<arr.size() && arr.get(minIdx) > arr.get(left))
            {
                minIdx = left;
            }
            if(right<arr.size() && arr.get(minIdx) > arr.get(right))
            {
                minIdx = right;
            }
            if(minIdx != i)
            {
                int temp = arr.get(i);
                arr.set(i,arr.get(minIdx));
                arr.set(minIdx,temp);
                heapify(minIdx);
            }
        }
